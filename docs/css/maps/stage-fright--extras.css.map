{"version":3,"sources":["stage-fright--extras.css","global/_mixins.scss","components/_states.scss","../../node_modules/letterform-shades/stylesheets/letterform-shades/_close-shade.scss","stage-fright--extras.scss"],"names":[],"mappings":"AAAA,qBCqEE,yBACA,+1BCpEA,gBAAiB,CAClB,wBDsFG,cACA,WElCF,0oBFmC8C,CAC7C,qBAvBD,yBACA,+3BChEqB,CAWtB,wBDwEG,cACA,WElCF,0oBFmC8C,CAC7C,oDClFC,cACA,gBAAiB,CAClB,6BAGC,aAAmD,CEFvD,eACE,YAZkB,CAanB","file":"../stage-fright--extras.css","sourcesContent":["[data-state='intro']{background-color:#004339;background:linear-gradient(0deg, rgba(0,67,57,0) 10%,rgba(0,67,57,0.05) 10%,rgba(0,67,57,0.05) 20%,rgba(0,67,57,0.1) 20%,rgba(0,67,57,0.1) 30%,rgba(0,67,57,0.15) 30%,rgba(0,67,57,0.15) 40%,rgba(0,67,57,0.2) 40%,rgba(0,67,57,0.2) 50%,rgba(0,67,57,0.3) 50%,rgba(0,67,57,0.3) 60%,rgba(0,67,57,0.4) 60%,rgba(0,67,57,0.4) 70%,rgba(0,67,57,0.5) 70%,rgba(0,67,57,0.5) 80%,rgba(0,67,57,0.6) 80%,rgba(0,67,57,0.6) 90%,rgba(0,67,57,0.8) 90%),linear-gradient(-90deg, rgba(0,67,57,0) 10%,rgba(0,67,57,0.05) 10%,rgba(0,67,57,0.05) 20%,rgba(0,67,57,0.1) 20%,rgba(0,67,57,0.1) 30%,rgba(0,67,57,0.15) 30%,rgba(0,67,57,0.15) 40%,rgba(0,67,57,0.2) 40%,rgba(0,67,57,0.2) 50%,rgba(0,67,57,0.3) 50%,rgba(0,67,57,0.3) 60%,rgba(0,67,57,0.4) 60%,rgba(0,67,57,0.4) 70%,rgba(0,67,57,0.5) 70%,rgba(0,67,57,0.5) 80%,rgba(0,67,57,0.6) 80%,rgba(0,67,57,0.6) 90%,rgba(0,67,57,0.8) 90%),#008571;text-align:right}[data-state='intro'] h1{font-size:4em;color:#fff;text-shadow:0em -.005em #111,-.005em 0em #001512,-.005em -.01em #111,-.01em -.005em #001512,-.01em -.015em #111,-.015em -.01em #001512,-.015em -.02em #111,-.02em -.015em #001512,-.02em -.025em #111,-.025em -.02em #001512,-.025em -.03em #111,-.03em -.025em #001512,-.03em -.035em #111,-.035em -.03em #001512,-.035em -.04em #111,-.04em -.035em #001512,-.04em -.045em #111,-.045em -.04em #001512,-.045em -.05em #111,-.05em -.045em #001512,-.05em -.055em #111,-.055em -.05em #001512,-.055em -.06em #111,-.06em -.055em #001512,-.06em -.065em #111,-.065em -.06em #001512,-.065em -.07em #111,-.07em -.065em #001512,-.07em -.075em #111,-.075em -.07em #001512}[data-state='outro']{background-color:#404040;background:linear-gradient(0deg, rgba(64,64,64,0) 10%,rgba(64,64,64,0.05) 10%,rgba(64,64,64,0.05) 20%,rgba(64,64,64,0.1) 20%,rgba(64,64,64,0.1) 30%,rgba(64,64,64,0.15) 30%,rgba(64,64,64,0.15) 40%,rgba(64,64,64,0.2) 40%,rgba(64,64,64,0.2) 50%,rgba(64,64,64,0.3) 50%,rgba(64,64,64,0.3) 60%,rgba(64,64,64,0.4) 60%,rgba(64,64,64,0.4) 70%,rgba(64,64,64,0.5) 70%,rgba(64,64,64,0.5) 80%,rgba(64,64,64,0.6) 80%,rgba(64,64,64,0.6) 90%,rgba(64,64,64,0.8) 90%),linear-gradient(-90deg, rgba(64,64,64,0) 10%,rgba(64,64,64,0.05) 10%,rgba(64,64,64,0.05) 20%,rgba(64,64,64,0.1) 20%,rgba(64,64,64,0.1) 30%,rgba(64,64,64,0.15) 30%,rgba(64,64,64,0.15) 40%,rgba(64,64,64,0.2) 40%,rgba(64,64,64,0.2) 50%,rgba(64,64,64,0.3) 50%,rgba(64,64,64,0.3) 60%,rgba(64,64,64,0.4) 60%,rgba(64,64,64,0.4) 70%,rgba(64,64,64,0.5) 70%,rgba(64,64,64,0.5) 80%,rgba(64,64,64,0.6) 80%,rgba(64,64,64,0.6) 90%,rgba(64,64,64,0.8) 90%),grey}[data-state='outro'] h1{font-size:4em;color:#fff;text-shadow:0em -.005em #111,-.005em 0em #141414,-.005em -.01em #111,-.01em -.005em #141414,-.01em -.015em #111,-.015em -.01em #141414,-.015em -.02em #111,-.02em -.015em #141414,-.02em -.025em #111,-.025em -.02em #141414,-.025em -.03em #111,-.03em -.025em #141414,-.03em -.035em #111,-.035em -.03em #141414,-.035em -.04em #111,-.04em -.035em #141414,-.04em -.045em #111,-.045em -.04em #141414,-.045em -.05em #111,-.05em -.045em #141414,-.05em -.055em #111,-.055em -.05em #141414,-.055em -.06em #111,-.06em -.055em #141414,-.06em -.065em #111,-.065em -.06em #141414,-.065em -.07em #111,-.07em -.065em #141414,-.07em -.075em #111,-.075em -.07em #141414}[data-state='outro'] a,[data-state='outro'] a:hover{color:#d9edea;text-shadow:none}[data-state='outro'] a:hover{color:#80c2b8}.btns--btn svg{fill:#fdfdfd}\n","@mixin progress($style: 'horizontal') {\n  @if ($style == 'vertical') {\n    .progress {\n      display: block;\n\n      &--section {\n        display: flex;\n        flex-direction: row-reverse;\n      }\n    }\n  }\n  @else {\n    .progress {\n      display: flex;\n      flex-direction: row;\n\n      &--section {\n        display: flex;\n        flex-direction: column;\n      }\n    }\n  }\n}\n\n@mixin double-rhythm {\n  margin-top: 2rem;\n}\n\n@mixin rhythm {\n  margin-top: 1rem;\n}\n\n@mixin half-rhythm {\n  margin-top: .5rem;\n}\n\n@mixin checkerboard($primary, $secondary: null, $to: 'bottom right', $steps: 10) {\n  $secondary: if($secondary, $secondary, hsl(hue($primary) - 309, saturation($primary), lightness($primary)));\n\n  $lr: 0deg;\n  $tb: -90deg;\n\n  @if $to == 'bottom left' {\n    $tb: 90deg;\n  }\n  @else if $to == 'top right' {\n    $lr: 180deg;\n  }\n  @else if $to == 'top left' {\n    $lr: 180deg;\n    $tb: 90deg;\n  }\n  @else if type-of($to) == 'list' {\n    @if length($to) == 1 {\n      $lr: nth($to, 1);\n      $tb: nth($to, 1);\n    }\n    @else {\n      $lr: nth($to, 1);\n      $tb: nth($to, 2);\n    }\n  }\n  @else if type-of($to) == 'number' {\n    $tb: $to;\n  }\n\n  $gradient: _awesome-header--gradient($primary, $steps);\n\n\n  background-color: $primary;\n  background:\n    linear-gradient($lr,\n      $gradient\n    ),\n    linear-gradient($tb,\n      $gradient\n    ),\n    $secondary;\n}\n\n\n@mixin heading($color, $secondary: false, $text: white) {\n  @if ($secondary == false) {\n    $secondary: mix(black, $color, 50%);\n  }\n\n  @include checkerboard(mix(black, $color, 50%), $color);\n\n  h1 {\n    font-size: 4em;\n    color: $text;\n    @include close-shade(mix($color, black, 16%), #111, 'bottom right', 15);\n  }\n\n}\n","[data-state='intro'] {\n  @include heading(map-get($accent, 'neutral'), map-get($accent, 'dark'));\n  text-align: right;\n};\n\n[data-state='outro'] {\n  @include heading(grey);\n\n  a,\n  a:hover {\n    color: mix(map-get($accent, 'neutral'), white, 15%);\n    text-shadow: none;\n  }\n\n  a:hover {\n    color: mix(map-get($accent, 'neutral'), white, 50%)\n  }\n};\n","//////////////////////////////\n// Close-Shade Mixin, inspired by http://practice.typekit.com/lesson/using-shades/\n// - $vertical: The color for the vertical shade (consider a lowercase `r`)\n// - $horizontal: The color for the horizontal shade (consider the lowercase `r`)\n// - $from: Direction shadow comes from. Options are `top right`, `top left`, `bottom right`, `bottom left`\n// - $distance: The distance you want the shadow to extend. Must be a positive integer\n// - $size: The size you want each slice.\n//////////////////////////////\n@mixin close-shade($vertical, $horizontal, $from: 'top right', $distance: 10, $size: 0.005em) {\n  $holder: ();\n\n  $vbs1: 0;\n  $vbs2: $size;\n  $vs1: $size * -1;\n  $vs2: 0;\n\n  @if type-of($from == 'list') {\n    $from: '#{$from}';\n  }\n\n  @for $i from 0 to $distance {\n    $offset: $size * $i;\n    $value-bottom: ();\n    $value: ();\n\n    @if (str-index($from, 'right')) {\n      $value-bottom: $vbs1 - $offset;\n      $value: $vs1 - $offset;\n    }\n    @else if (str-index($from, 'left')) {\n      $value-bottom: $vbs1 + $offset;\n      $value: -1 * $vs1 + $offset;\n    }\n    @else {\n      $value-bottom: 0;\n      $value: 0;\n    }\n\n    @if (str-index($from, 'top')) {\n      $value-bottom: join($value-bottom, ($vbs2 + $offset));\n      $value: join($value, ($vs2 + $offset));\n    }\n     @else if (str-index($from, 'bottom')) {\n      $value-bottom: join($value-bottom, (-1 * $vbs2 - $offset));\n      $value: join($value, (-1 * $vs2 - $offset));\n    }\n    @else {\n      $value-bottom: join($value-bottom, 0);\n      $value: join($value, 0);\n    }\n\n    $value-bottom: join($value-bottom, $horizontal);\n    $value: join($value, $vertical);\n    $holder: append($holder, $value-bottom, comma);\n    $holder: append($holder, $value, comma);\n  }\n  text-shadow: $holder;\n}","@import 'global';\n\n$background: #fdfdfd !default;\n$color: #323232 !default;\n$accent: (\n  light: #6eedd8,\n  neutral: #008571,\n  dark: #003c32\n) !default;\n$transition: all 0.35s cubic-bezier(0.77, 0.1, 0.22, 1) !default;\n\n@import 'components/states';\n\n.btns--btn svg {\n  fill: $background;\n}\n"]}