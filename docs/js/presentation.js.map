{"version":3,"file":"presentation.js","sources":["../../src/js/lib/presentation.js"],"sourcesContent":["export function createPresentation() {\n  const request = window.PresentationRequest ? new PresentationRequest([window.location.origin + window.location.pathname]) : null;\n\n  const presentation = {\n    request,\n    connection: null,\n  };\n\n  if (request) {\n    // Make the default presentation request our presentation request\n    navigator.presentation.defaultRequest = presentation.request;\n  }\n\n  return presentation;\n}\n\nexport async function receivePresentationControls(store) {\n  if (navigator.presentation && navigator.presentation.receiver) {\n    const list = await navigator.presentation.receiver.connectionList;\n\n    list.connections.map(connection => addPresentationConnection(connection, store));\n  }\n}\n\nexport function addPresentationConnection(connection, store) {\n  connection.send(JSON.stringify({\n    start: true,\n  }));\n\n  connection.addEventListener('message', e => {\n    const message = JSON.parse(e.data);\n\n    if (message.hasOwnProperty('goto')) {\n      store.dispatch('navigate', message.goto);  \n    }\n  });\n\n  store.changes.subscribe('index', (state) => {\n    connection.send(JSON.stringify({\n      goto: state.index,\n    }));\n  });\n}\n\nexport function advancePresentation(connection, goto) {\n  if (connection) {\n    connection.send(JSON.stringify({\n      goto,\n    }));\n  }\n}\n\nexport function buildNotesPreviewLink(index) {\n  const locale = window.location;\n  const search = new URLSearchParams();\n  const link = new URL(locale.origin + locale.pathname);\n  link.hash = `#/${index}`;\n  search.set('embedded', true);\n\n  link.search = search.toString();\n\n  return link.toString();\n}\n\nexport function updateNotes(notes, index, current) {\n  // Update Notes preview URLs on index change;\n  notes.current.src = buildNotesPreviewLink(index);\n\n  let nextSlideIndex = index + 1;\n\n  if (!current.next) {\n    nextSlideIndex--;\n  }\n\n  notes.next.src = buildNotesPreviewLink(nextSlideIndex);\n\n  if (current.notes) {\n    notes.content.innerHTML = current.notes;\n  } else {\n    notes.content.innerHTML = '';\n  }\n\n  notes.index.textContent = index;\n\n  if (current.hasOwnProperty('fragment')) {\n    notes.fragments.dataset.active = true;\n    notes.currentFrag.textContent = current.fragment;\n    notes.totalFrag.textContent = current.totalFragments;\n  } else {\n    if (notes.fragments.dataset.hasOwnProperty('active')) {\n      delete notes.fragments.dataset.active;\n    }\n    notes.currentFrag.textContent = '';\n    notes.totalFrag.textContent = '';\n  }\n}\n\nexport function timing(parent) {\n  const clock = parent.querySelector('.clock--value');\n  const timer = parent.querySelector('.timer');\n  const hour = parent.querySelector('.timer--hours');\n  const minute = parent.querySelector('.timer--minutes');\n  const second = parent.querySelector('.timer--seconds');\n  let start = new Date();\n\n  // Update to begin\n  update();\n\n  // Update every second\n  let runningClock = setInterval(update, 1000);\n\n  timer.addEventListener('click', e => {\n    start = new Date();\n\n    clearInterval(runningClock);\n\n    hour.textContent = timePad(0);\n    minute.textContent = `:${timePad(0)}`;\n    second.textContent = `:${timePad(0)}`;\n\n    runningClock = setInterval(update, 1000);\n  });\n\n  function update() {\n    const now = new Date();\n\n    const diff = now.getTime() - start.getTime();\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff / (1000 * 60)) % 60);\n    const seconds = Math.floor((diff / (1000)) % 60);\n\n    clock.textContent = now.toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n    hour.textContent = timePad(hours);\n    minute.textContent = `:${timePad(minutes)}`;\n    second.textContent = `:${timePad(seconds)}`;\n\n    hour.setAttribute('data-mute', hours <= 0);\n    minute.setAttribute('data-mute', minutes <= 0);\n  }\n\n  function timePad(time) {\n    const str = `00${parseInt(time)}`;\n    return str.substring(str.length - 2);\n  }\n}\n\nexport function notesBody() {\n  const notes = document.createElement('section');\n  notes.classList.add('_speaker-notes');\n\n  notes.innerHTML = '<div class=\"_speaker-notes--current\"> <iframe class=\"_speaker-notes--slide-preview\" frameborder=\"0\" height=\"1024\" width=\"1280\"></iframe> </div><div class=\"_speaker-notes--upcoming\"> <span class=\"_speaker-notes--label\">Upcoming:</span> <iframe class=\"_speaker-notes--slide-preview\" frameborder=\"0\" height=\"1024\" width=\"1280\"></iframe> </div><div class=\"_speaker-notes--controls\"> <div class=\"controls\"> <div class=\"controls--time\"> <h4 class=\"controls--label\">Time <span class=\"controls--reset\">Click to Reset</span></h4> <button class=\"timer\"> <span class=\"timer--hours\">00</span><span class=\"timer--minutes\">:00</span><span class=\"timer--seconds\">:00</span> </button><div class=\"clock\"> <span class=\"clock--value\">0:00 AM</span> </div></div><div class=\"controls--position\"> <p class=\"controls--fragment\">Fragment <span class=\"controls--fragment-current\"></span>/<span class=\"controls--fragment-total\"></span></p><p class=\"controls--slide\">Step <span class=\"controls--slide-current\"></span>/<span class=\"controls--slide-total\"></span></p></div></div></div><article class=\"_speaker-notes--notes\"> <div class=\"slide-notes\"> <h4 class=\"slide-notes--label\">Notes</h4> <div class=\"slide-notes--content\"></div></div></article>';\n\n  timing(notes);\n\n  return {\n    _notes: notes,\n    current: notes.querySelector('._speaker-notes--current ._speaker-notes--slide-preview'),\n    next: notes.querySelector('._speaker-notes--upcoming ._speaker-notes--slide-preview'),\n    content: notes.querySelector('.slide-notes--content'),\n    index: notes.querySelector('.controls--slide-current'),\n    total: notes.querySelector('.controls--slide-total'),\n    fragments: notes.querySelector('.controls--fragment'),\n    currentFrag: notes.querySelector('.controls--fragment-current'),\n    totalFrag: notes.querySelector('.controls--fragment-total'),\n  }\n}\n"],"names":["createPresentation","request","window","PresentationRequest","location","origin","pathname","presentation","connection","navigator","defaultRequest","receivePresentationControls","store","receiver","list","connectionList","connections","map","addPresentationConnection","send","JSON","stringify","start","addEventListener","e","message","parse","data","hasOwnProperty","dispatch","goto","changes","subscribe","state","index","advancePresentation","buildNotesPreviewLink","locale","search","URLSearchParams","link","URL","hash","set","toString","updateNotes","notes","current","src","nextSlideIndex","next","content","innerHTML","textContent","fragments","dataset","active","currentFrag","fragment","totalFrag","totalFragments","timing","parent","clock","querySelector","timer","hour","minute","second","Date","update","runningClock","setInterval","clearInterval","timePad","now","diff","getTime","hours","Math","floor","minutes","seconds","toLocaleTimeString","hour12","setAttribute","time","str","parseInt","substring","length","notesBody","document","createElement","classList","add","_notes","total"],"mappings":"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"}